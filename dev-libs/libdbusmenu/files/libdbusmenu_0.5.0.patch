--- libdbusmenu-0.5.0.orig/libdbusmenu-gtk/client.c
+++ libdbusmenu-0.5.0/libdbusmenu-gtk/client.c
@@ -823,14 +823,22 @@
 	return;
 }
 
-#ifdef MASSIVEDEBUGGING
 static void
-destroy_gmi (GtkMenuItem * gmi, DbusmenuMenuitem * mi)
+destroy_gmi (GtkMenuItem * gmi)
 {
-	g_debug("Destorying GTK Menuitem for %d", dbusmenu_menuitem_get_id(mi));
+#ifdef MASSIVEDEBUGGING
+	g_debug("Destroying GTK Menuitem %d", gmi);
+#endif
+
+	/* Call gtk_widget_destroy to remove from any containers and cleanup */
+	gtk_widget_destroy(GTK_WIDGET(gmi));
+
+	/* Now remove last ref that we are holding (due to g_object_ref_sink in
+	   dbusmenu_gtkclient_newitem_base).  This should finalize the object */
+	g_object_unref(G_OBJECT(gmi));
+
 	return;
 }
-#endif
 
 /**
  * dbusmenu_gtkclient_newitem_base:
@@ -857,7 +865,7 @@
 
 	/* Attach these two */
 	g_object_ref_sink(G_OBJECT(gmi));
-	g_object_set_data_full(G_OBJECT(item), data_menuitem, gmi, (GDestroyNotify)gtk_widget_destroy);
+	g_object_set_data_full(G_OBJECT(item), data_menuitem, gmi, (GDestroyNotify)destroy_gmi);
 
 	/* DbusmenuMenuitem signals */
 	g_signal_connect(G_OBJECT(item), DBUSMENU_MENUITEM_SIGNAL_PROPERTY_CHANGED, G_CALLBACK(menu_prop_change_cb), client);
--- libdbusmenu-0.5.0.orig/libdbusmenu-gtk/genericmenuitem.c
+++ libdbusmenu-0.5.0/libdbusmenu-gtk/genericmenuitem.c
@@ -449,6 +449,7 @@
 		if (GTK_IS_IMAGE(child)) {
 			/* We've got a label, let's update it. */
 			imagew = GTK_IMAGE(child);
+			child = NULL;
 		} else if (GTK_IS_BOX(child)) {
 			/* Look for the label in the box */
 			gtk_container_foreach(GTK_CONTAINER(child), set_image_helper, &imagew);
--- libdbusmenu-0.5.0.orig/libdbusmenu-glib/client.c
+++ libdbusmenu-0.5.0/libdbusmenu-glib/client.c
@@ -1610,7 +1610,7 @@
 dbusmenu_client_send_about_to_show(DbusmenuClient * client, gint id, void (*cb)(gpointer data), gpointer cb_data)
 {
 	g_return_if_fail(DBUSMENU_CLIENT(client));
-	g_return_if_fail(id > 0);
+	g_return_if_fail(id >= 0);
 
 	DbusmenuClientPrivate * priv = DBUSMENU_CLIENT_GET_PRIVATE(client);
 	g_return_if_fail(priv != NULL);
